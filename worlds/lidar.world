<?xml version="1.0"?> 
<sdf version="1.5">
  <world name="default">

    <gui fullscreen='0'>
      <plugin name='keyboard' filename='libKeyboardGUIPlugin.so'/>
    </gui>


    <physics type="ode">
      <ode>
        <solver>
          <type>quick</type>
          <iters>100</iters>
          <sor>1.0</sor>
        </solver>
        <constraints>
          <cfm>0.0</cfm>
          <erp>0.9</erp>
          <contact_max_correcting_vel>0.1</contact_max_correcting_vel>
          <contact_surface_layer>0.0</contact_surface_layer>
        </constraints>
      </ode>
      <real_time_update_rate>-1</real_time_update_rate>
      <!-- <max_step_size>0.0020</max_step_size> -->
    </physics>

    <model name="ground_plane">
      <static>true</static>
      <link name="link">
        <collision name="collision">
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>5000 5000</size>
            </plane>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>1</mu>
                <mu2>1</mu2>
              </ode>
            </friction>
          </surface>
        </collision>
        <visual name="runway">
          <pose>000 0 0.005 0 0 0</pose>
          <cast_shadows>false</cast_shadows>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>1829 45</size>
            </plane>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Runway</name>
            </script>
          </material>
        </visual>

        <visual name="grass">
          <pose>0 0 -0.1 0 0 0</pose>
          <cast_shadows>false</cast_shadows>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>5000 5000</size>
            </plane>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Grass</name>
            </script>
          </material>
        </visual>

      </link>
    </model>

    <include>
      <uri>model://sun</uri>
    </include>
    <model name="iris">
      <include>
        <!--<uri>model://iris_with_standoffs_demo</uri>-->
        <uri>model://drone1</uri>
      </include>
      <pose> 0 0 0 0 0 0</pose>
      <enable_wind>true</enable_wind>


      <link name='camera1'>
        <pose frame=''>0 1 0.394923 1.57 -0 1.57</pose>
        <inertial>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <mass>0.1</mass>
          <inertia>
            <ixx>0.001</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.001</iyy>
            <iyz>0</iyz>
            <izz>0.001</izz>
          </inertia>
        </inertial>
        <visual name='visual1'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.025</radius>
              <length>0.025</length>
            </cylinder>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Grey</name>
            </script>
          </material>
        </visual>
        <sensor name='camera1' type='camera'>
          <pose frame=''>0 0 0 -1.57 -1.57 0</pose>
          <camera name='__default1__'>
            <horizontal_fov>0.250</horizontal_fov>
            <image>
              <width>1280</width>
              <height>960</height>
            </image>
            <clip>
              <near>0.05</near>
              <far>1000</far>
            </clip>
          </camera>
          <always_on>1</always_on>
          <update_rate>10</update_rate>
          <visualize>1</visualize>
          <plugin name='camera_controller' filename='libgazebo_ros_camera.so'>
            <alwaysOn>1</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>webcam1</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info1</cameraInfoTopicName>
            <frameName>camera_link1</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
          </plugin>
        </sensor>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <joint name='base_camera1_joint' type='fixed'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <parent>link_CD</parent>
        <child>camera1</child>
        <axis>
          <limit>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <xyz>0 0 0</xyz>
          <use_parent_model_frame>1</use_parent_model_frame>
          <dynamics>
            <damping>0.004</damping>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
        </axis>
      </joint>




      <link name='camera2'>
        <pose frame=''>0 -1 0.394923 1.57 -0 1.57</pose>
        <inertial>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <mass>0.1</mass>
          <inertia>
            <ixx>0.001</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.001</iyy>
            <iyz>0</iyz>
            <izz>0.001</izz>
          </inertia>
        </inertial>
        <visual name='visual2'>
          <pose frame=''>0 0 0 0 -0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.025</radius>
              <length>0.025</length>
            </cylinder>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Grey</name>
            </script>
          </material>
        </visual>
        <sensor name='camera2' type='camera'>
          <pose frame=''>0 0 0 -1.57 -1.57 0</pose>
          <camera name='__default2__'>
            <horizontal_fov>0.250</horizontal_fov>
            <image>
              <width>1280</width>
              <height>960</height>
            </image>
            <clip>
              <near>0.05</near>
              <far>1000</far>
            </clip>
          </camera>
          <always_on>1</always_on>
          <update_rate>10</update_rate>
          <visualize>1</visualize>
          <plugin name='camera_controller' filename='libgazebo_ros_camera.so'>
            <alwaysOn>1</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>webcam2</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info2</cameraInfoTopicName>
            <frameName>camera_link2</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
          </plugin>
        </sensor>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>

      <!--
      <joint name='camera1_camera2_joint' type='fixed'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <parent>camera1</parent>
        <child>camera2</child>
        <axis>
          <limit>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <xyz>0 0 1</xyz>
          <use_parent_model_frame>1</use_parent_model_frame>
          <dynamics>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
        </axis>
      </joint>-->


      <joint name='base_camera2_joint' type='fixed'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <parent>link_CD</parent>
        <child>camera2</child>
        <axis>
          <limit>
            <lower>-1e+16</lower>
            <upper>1e+16</upper>
          </limit>
          <xyz>0 0 0</xyz>
          <use_parent_model_frame>1</use_parent_model_frame>
          <dynamics>
            <damping>0.004</damping>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
        </axis>
      </joint>


       <plugin name='keystojoints' filename='libKeysToJointsPlugin.so'>

        <!-- a -->
         <map key='97' joint='iris::joint_D'  scale='0.8' type='velocity' kp='200' ki='0' kd='0'/>
        <!-- s -->
         <map key='115' joint='iris::joint_D' scale='0' type='velocity' kp='200' ki='0' kd='0'/>
        <!-- d -->
         <map key='100' joint='iris::joint_D'  scale='-0.8' type='velocity' kp='200' ki='0' kd='0'/>

        <!-- a -->
        <!--<map key='97' joint='iris::joint_D'  scale='0.1' type='position' kp='0.5' ki='0.1' kd='0'/>-->

        <!-- d -->
        <!--<map key='100' joint='iris::joint_D'  scale='-0.1' type='position' kp='3' ki='0.1' kd='0'/>-->
        <!-- a -->
        <!--<map key='97' joint='iris::joint_D'  scale='1000' type='force'/>-->
        <!-- d -->
        <!--<map key='100' joint='iris::joint_D'  scale='-1000' type='force'/>-->


        <!-- w -->
        <!--<map key='119' joint='simple_arm::arm_elbow_pan_joint' scale='1000' type='force'/>-->


      </plugin>



      <link name="link_CD">
        <pose>0 0 0.394923  0 0 0</pose>
        <inertial>
          <mass>0.07200000000000001</mass>
          <inertia>
            <ixx>0.0005424000000000002</ixx>
            <iyy>4.800000000000001e-06</iyy>
            <izz>0.0005424000000000002</izz>
            <ixy>0.0</ixy>
            <ixz>0.0</ixz>
            <iyz>0.0</iyz>
          </inertia>
        </inertial>
        <collision name="boxCDCollision">
          <geometry>
            <box>
              <size>0.02 2.0000000000000004 0.02</size>
            </box>
          </geometry>
        </collision>
        <visual name="boxCDVisual">
          <geometry>
            <box>
              <size>0.02 2.0000000000000004 0.02</size>
            </box>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Wood</name>
            </script>
          </material>
        </visual>
      </link>


      <joint name="joint_D" type="revolute">
        <pose>0 0 0 0 0 0</pose>
        <parent>iris_demo::iris::base_link</parent>
        <child>link_CD</child>
        <axis>
          <xyz>0 0 1</xyz>
          <dynamics>
            <damping>0.2</damping>
            <spring_reference>0</spring_reference>
            <spring_stiffness>0</spring_stiffness>
          </dynamics>
        </axis>
      </joint>



         <!--add lidar-->
        <link name="hokuyo_link">
          <pose>0 0 0 0 0 0</pose>
          <collision name="collision">
            <pose>0 0 0.3 0 0 0</pose>
            <geometry>
              <box>
                <size>0.1 0.1 0.1</size>
              </box>
            </geometry>
          </collision>
          <visual name="visual">
            <pose>0 0 0.27 0 0 0</pose>
            <geometry>
              <mesh>
                <uri>model://hokuyo/meshes/hokuyo.dae</uri>
              </mesh>
            </geometry>
          </visual>
          <inertial>
            <mass>0.016</mass>
            <inertia>
               <ixx>0.0001</ixx>
               <ixy>0</ixy>
               <ixz>0</ixz>
               <iyy>0.0001</iyy>
               <iyz>0</iyz>
               <izz>0.0001</izz>
               <!-- low intertia necessary to avoid not disturb the drone -->
            </inertia>
          </inertial>

          <sensor type="ray" name="laser">
            <pose>0 0 0.3 0 0 1.57</pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
              <scan>
                <horizontal>
                  <samples>1024</samples>
                  <resolution>1</resolution>
                  <min_angle>-3.141593</min_angle>
                  <max_angle>3.141593</max_angle>
                </horizontal>
                <!-- <vertical>
                  <samples>10</samples>
                  <resolution>1</resolution>
                  <min_angle>-0.1</min_angle>
                  <max_angle>0.1</max_angle>
                </vertical>-->
              </scan>
              <range>
                <min>0.1</min>
                <max>101</max>
                <resolution>0.1</resolution>
              </range>
              <!--<noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
              </noise>
              <noise type="gaussian">
                <mean>0</mean>
                <stddev>0.0002</stddev>
              </noise> -->
              <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
              </noise>

            </ray>
            <plugin name="hokuyo_node" filename="libgazebo_ros_laser.so">
              <robotNamespace></robotNamespace>
              <topicName>/spur/laser/scan</topicName>
              <frameName>/hokuyo_sensor_link</frameName>
            </plugin>
          </sensor>
        </link>

        <joint name="hokuyo_joint" type="fixed">
          <pose>0 0 0 0 0 0</pose>
          <parent>iris::iris_demo::iris::base_link</parent>
          <child>hokuyo_link</child>
        </joint>
        
        <link name='iris2x/imu_link'>
          <pose frame=''>0 0 0 0 0 3.1415927</pose>
          <inertial>
            <pose frame=''>0 0 0 0 -0 0</pose>
            <mass>0.015</mass>
            <inertia>
              <ixx>1e-05</ixx>
              <ixy>0</ixy>
              <ixz>0</ixz>
              <iyy>1e-05</iyy>
              <iyz>0</iyz>
              <izz>1e-05</izz>
            </inertia>
          </inertial>
        </link>
        <joint name='iris2x/imu_joint' type='revolute'>
          <child>iris2x/imu_link</child>
          <parent>iris::iris_demo::iris::base_link</parent>
          <axis>
            <xyz>1 0 0</xyz>
            <limit>
              <lower>0</lower>
              <upper>0</upper>
              <effort>0</effort>
              <velocity>0</velocity>
            </limit>
            <dynamics>
              <spring_reference>0</spring_reference>
              <spring_stiffness>0</spring_stiffness>
            </dynamics>
            <use_parent_model_frame>1</use_parent_model_frame>
          </axis>
        </joint>

        <plugin name='rotors_gazebo_imu_plugin' filename='librotors_gazebo_imu_plugin.so'>
        <robotNamespace>d1</robotNamespace>
        <linkName>iris2x/imu_link</linkName>
        <imuTopic>/imu</imuTopic>
        <gyroscopeNoiseDensity>0.0003394</gyroscopeNoiseDensity>
        <gyroscopeRandomWalk>3.8785e-05</gyroscopeRandomWalk>
        <gyroscopeBiasCorrelationTime>1000.0</gyroscopeBiasCorrelationTime>
        <gyroscopeTurnOnBiasSigma>0.0087</gyroscopeTurnOnBiasSigma>
        <accelerometerNoiseDensity>0.004</accelerometerNoiseDensity>
        <accelerometerRandomWalk>0.006</accelerometerRandomWalk>
        <accelerometerBiasCorrelationTime>300.0</accelerometerBiasCorrelationTime>
        <accelerometerTurnOnBiasSigma>0.196</accelerometerTurnOnBiasSigma>
        </plugin>


    </model>
    <wind>
      <linear_velocity>0 1 0</linear_velocity>
    </wind>
 


    <model name="drone2">
      <pose> 100 0 0 0 0 0</pose>
      <include>
        <uri>model://drone2</uri>
      </include>
    </model>


    <model name='fire_hydrant'>
      <static>1</static>
      <link name='link'>
        <collision name='collision'>
          <geometry>
            <mesh>
              <uri>model://fire_hydrant/meshes/fire_hydrant.dae</uri>
            </mesh>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <contact>
              <ode/>
            </contact>
            <bounce/>
            <friction>
              <torsional>
                <ode/>
              </torsional>
              <ode/>
            </friction>
          </surface>
        </collision>
        <visual name='visual'>
          <geometry>
            <mesh>
              <uri>model://fire_hydrant/meshes/fire_hydrant.dae</uri>
            </mesh>
          </geometry>

        </visual>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <pose frame=''>50 -14 0 0 -0 0</pose>
    </model>


    <model name='fire_hydrant2'>
      <static>1</static>
      <link name='link'>
        <collision name='collision'>
          <geometry>
            <mesh>
              <uri>model://fire_hydrant/meshes/fire_hydrant.dae</uri>
            </mesh>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <contact>
              <ode/>
            </contact>
            <bounce/>
            <friction>
              <torsional>
                <ode/>
              </torsional>
              <ode/>
            </friction>
          </surface>
        </collision>
        <visual name='visual'>
          <geometry>
            <mesh>
              <uri>model://fire_hydrant/meshes/fire_hydrant.dae</uri>
            </mesh>

          </geometry>

        </visual>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
      <pose frame=''>25 -14 0 0 -0 0</pose>
    </model>

  <plugin name="wind" filename="libWindPlugin3.so">
      <horizontal>
        <magnitude>
          <time_for_rise>10</time_for_rise>
          <sin>
            <amplitude_percent>0.05</amplitude_percent>
            <period>60</period>
          </sin>
          <noise type="gaussian">
           <mean>0</mean>
           <stddev>0.0002</stddev>
          </noise>
        </magnitude>
        <direction>
          <time_for_rise>30</time_for_rise>
          <sin>
            <amplitude>5</amplitude>
            <period>20</period>
          </sin>
          <noise type="gaussian">
           <mean>0</mean>
           <stddev>0.03</stddev>
          </noise>
        </direction>
      </horizontal>
      <vertical>
        <noise type="gaussian">
         <mean>0</mean>
         <stddev>0.03</stddev>
        </noise>
      </vertical>
      <!-- <force_approximation_scaling_factor>0.00694444</force_approximation_scaling_factor>-->
      <!--<C_D>0.421118</C_D>-->
      <C_D>0.784359</C_D>
    </plugin>
    <plugin name="hello_world" filename="libhello_world3.so"/>

  </world>
</sdf>
